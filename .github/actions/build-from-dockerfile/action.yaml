name: "Build list"
description: "Build list"
outputs:
  image:
    description: "Name of the built image"
    value: ghcr.io/${{ github.repository }}/list
  digest:
    description: "Digest of the built image"
    value: ${{ steps.build.outputs.digest }}

runs:
  using: composite
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # tag=v2.0.0

    - name: Container meta for list image
      id: container_meta
      uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # tag=v4
      with:
        images: |
          ghcr.io/${{ github.repository }}/list
        labels: |
          org.opencontainers.image.created=""

    - name: Build image
      id: build
      uses: docker/build-push-action@1cb9d22b932e4832bb29793b7777ec860fc1cde0 # tag=v3.1.1
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        push: false
        tags: ${{ steps.container_meta.outputs.tags }}
        labels: ${{ steps.container_meta.outputs.labels }}
        load: true
        context: src/list

    - name: Run unit tests
      uses: docker/build-push-action@1cb9d22b932e4832bb29793b7777ec860fc1cde0 # tag=v3.1.1
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        push: false
        target: test
        context: src/list

    - name: Save container image as tar archives
      if: ${{ github.event_name == 'pull_request' }}
      shell: bash
      env:
        IMAGE: ${{ fromJson(steps.container_meta.outputs.json).tags[0] }}
      run: |
        docker save "$IMAGE" -o /tmp/list-image.tar

    - name: Upload container image
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3.1.0
      with:
        name: list-build-artifacts
        path: |
          /tmp/list-image.tar
